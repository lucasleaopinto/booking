{{define "base"}}
    <!doctype html>
    <html lang="en">

    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>My Nice Page</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
            integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
        <link rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.1/dist/css/datepicker-bs5.min.css">
        <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
        <link rel="stylesheet" type="text/css" href="/static/css/styles.css">

    </head>

    <body>
        <nav class="navbar navbar-expand-lg bg-body-tertiary" data-bs-theme="dark">
            <div class="container-fluid">
                <a class="navbar-brand" href="#">Navbar</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                    data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
                    aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page" href="/">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/about">About</a>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                                aria-expanded="false" id="navbarDrop">
                                Rooms
                            </a>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="/generals-quarters">General's Quarters</a></li>
                                <li><a class="dropdown-item" href="/majors-suite">Major's Suite</a></li>
                            </ul>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/search-availability">Book Now</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/contact">Contact</a>
                        </li>
                    </ul>
                    <form class="d-flex" role="search">
                        <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                        <button class="btn btn-outline-success" type="submit">Search</button>
                    </form>
                </div>
            </div>
        </nav>

        {{block "content" .}}

        {{end}}

        <footer class="my-footer">
            <div class="row">
                <div class="col">
                    left
                </div>

                <div class="col">
                    center
                </div>

                <div class="col">
                    right
                </div>
            </div>
        </footer>

        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"
            integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p"
            crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js"
            integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF"
            crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.1/dist/js/datepicker-full.min.js"></script>
        <script src="https://unpkg.com/notie"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

        {{block "js" .}}

        {{end}}

        <script>

            let attention = Prompt();

            // Example starter JavaScript for disabling form submissions if there are invalid fields
            (function () {
                'use strict'

                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                let forms = document.querySelectorAll('.needs-validation')

                // Loop over them and prevent submission
                Array.prototype.slice.call(forms)
                    .forEach(function (form) {
                        form.addEventListener('submit', function (event) {
                            if (!form.checkValidity()) {
                                event.preventDefault()
                                event.stopPropagation()
                            }

                            form.classList.add('was-validated')
                        }, false)
                    })
            })()

            function notify(msg, msgType) {
                notie.alert({
                    type: msgType,
                    text: msg,
                })
            }

            function notifyModal(title, text, icon, confirmButtonText) {
                Swal.fire({
                    title: title,
                    html: text,
                    icon: icon,
                    confirmButtonText: confirmButtonText
                })
            }

            function Prompt() {

                let toast = function (c) {
                    console.log("entrou aqui");
                    const {
                        msg = "",
                        icon = "success",
                        position = "top-end"
                    } = c;

                    const Toast = Swal.mixin({
                        toast: true,
                        title: msg,
                        position: position,
                        icon: icon,
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({})
                }

                let success = function (c) {
                    const {
                        msg = "",
                        title = "",
                        footer = ""

                    } = c;

                    Swal.fire({
                        icon: 'success',
                        title: title,
                        text: msg,
                        footer: footer
                    })
                }

                let error = function (c) {
                    const {
                        msg = "",
                        title = "",
                        footer = ""

                    } = c;

                    Swal.fire({
                        icon: 'success',
                        title: title,
                        text: msg,
                        footer: footer
                    })
                }

                async function custom(c) {
                    const {
                        msg = "",
                        title = "",
                    } = c;

                    const { value: result } = await Swal.fire({
                        title: title,
                        html: msg,
                        backdrop: false,
                        focusConfirm: false,
                        showCancelButton: true,
                        willOpen: () => {
                            if (c.willOpen !== undefined){
                                c.willOpen();
                            }
                        },
                        preConfirm: () => {
                            return [
                                document.getElementById('start').value,
                                document.getElementById('end').value
                            ]
                        },
                        didOpen: () => {
                            if (c.didOpen !== undefined){
                                c.didOpen();
                            }
                        }
                    })

                    if (result) {
                        console.log(result)
                        if (result.dismiss !== Swal.DismissReason.cancel){
                            if(result.value !== ""){
                                if(c.callback !== undefined){
                                    c.callback(result);
                                }
                            } else{
                                c.callback(false);
                            }
                        }else {
                            c.callback(false);
                        }
                        //Swal.fire(JSON.stringify(formValues))
                    }
                }

                return {
                    toast: toast,
                    success: success,
                    error: error,
                    custom: custom,
                }
            }

        </script>
    </body>

    </html>
{{end}}